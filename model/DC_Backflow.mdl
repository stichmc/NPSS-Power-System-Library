/***
 -------------------------------------------------------------------------------
 |                                                                             |
 | NASA Glenn Research Center                                                  |
 | 21000 Brookpark Rd 		                                                   |
 | Cleveland, OH 44135 	                                                       |
 |                                                                             |
 | File Name:     SW13.mdl                                                     |
 | Author(s):	  George Thomas, Brian Malone                   			   |
 | Date(s):       October 2020                                                 |
 |                                                                             |
 | Description:   DC model with backflow                                       |
 |             									                               |
 |                                                                             |
 -------------------------------------------------------------------------------
***/

cout<<"======================================="<<endl;
cout<<" MODEL WITH DC-DC CONVERTER AND BACKFLOW"<<endl;
cout<<"======================================="<<endl;

#ifdef THERMO
    cout << "THERMO" << endl;
    setThermoPackage("$THERMO");
#elseif
    cout << "GasTbl" << endl;
    setThermoPackage("GasTbl");
#endif

/**************************
Electric Power System Components
**************************/
Element Source DCSupply { //Ametek SGA DC power supply M550129-01
    setOption("ElectricPowerType", "DC");
    Vrms = 100; // [volts] 
    effDes = 0.95; 
}

Element Cable CableLeft 
{
	R = 0.1; //Ohms
	L = 0; //Henries
}

Element DC_DC_Converter DeltaDC
{
    K = 1; //K = Vout/Vin
    SpecificPower = 10; // kW/kg
    effDes = 0.95;
}

Element Cable CableRight 
{
	R = 0.1; //Ohms
	L = 0; //Henries
}

Element ConstantPowerLoad CLoad
{
    Pdemand  = 10; //kW
    eff = 0.95;
}					



//-------------------------------------------------------------------------------------------------
// Component Linkages
//-------------------------------------------------------------------------------------------------
linkPorts( "DCSupply.EP_O", "CableLeft.EP_I", "Port1" );
// linkPortI( "DCSupply.EP_O", "CableLeft.EP_I" );
linkPorts( "CableLeft.EP_O", "DeltaDC.EP_I", "Port2" );
// linkPortI( "CableLeft.EP_O", "DeltaDC.EP_I" );
linkPorts( "DeltaDC.EP_O", "CableRight.EP_I", "Port3" );
// linkPortI( "DeltaDC.EP_O", "CableRight.EP_I" );
linkPorts( "CableRight.EP_O", "CLoad.EP_I", "Port4" );
// linkPortI( "CableRight.EP_O", "CLoad.EP_I" );

propagateEpsSolverListAndPowerTypes();

//solverSequence = { "CableLeft", "CableRight", "DCSupply", "DeltaDC", "CLoad" }; 

void BFPrintOutput() 
{
    Complex deltaOutput = DeltaDC.EP_O.S;
    Complex deltaInput = DeltaDC.EP_I.S;
    cout << " Case = " << CASE;
    cout << " Calculated DC-DC eff = " << deltaOutput.getReal()/deltaInput.getReal() << endl;
    // cout << " Calculated DC-DC eff = " << DeltaDC.EP_O.S.r/DeltaDC.EP_I.S.r << endl;
    cout << " DC-DC eff = " <<  DeltaDC.eff << endl;
    Complex cloadInput = Cload.EP_I.S;
    cout << " Calculated load eff = "  << CLoad.P/cloadInput.getReal() << endl; 
    // cout << " Calculated load eff = "  << CLoad.P/CLoad.EP_I.S.r << endl;
    cout << " Load eff = " << CLoad.eff << endl;
}

// Initial independent variable guesses are here.
DeltaDC.Voltage = 80; 
CLoad.Vreal = 60;
CLoad.Vimag = 0;
